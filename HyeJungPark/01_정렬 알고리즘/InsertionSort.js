(() => {
  let arr = [4, 5, 2, 3, 1];
  let N = arr.length;

  for (let i = 1; i < N; i++) {
    // 현재 비교할 값을 temp 변수에 보관한다.
    let temp = arr[i];
    // 정렬이 완료된 temp의 좌측을 역순으로 돌기 때문에, 시작지점을 i의 바로 좌측으로 설정해준다.
    let j = i - 1;
    // j가 0보다 크거나 같고, arr[j]와 temp 값을 비교해서
    // 즉, temp와 그 바로 직전의 값을 비교해서 (오름차순 정렬일 경우) 직전 값이 현재 값보다 더 크면 while 문 안으로 진입한다.
    // 만약 조건에 해당하지 않으면 정렬이 잘 된 상태이기 때문에 while 문으로 진입하지 않는다!
    while (j >= 0 && arr[j] > temp) {
      //매 반복마다 arr[j] 값을 j의 오른쪽으로 옮겨준 뒤 j를 감소시킨다.
      arr[j + 1] = arr[j];
      j--;
    }
    // temp 좌측의 정렬이 완료된 이후에 temp의 적절한 자리를 찾아준다. while문에서 j의 값이 감소했기 때문에 j+1을 해주고, while문에 진입하지 않은 경우에도 원래 자기 위치에 들어가게 된다.
    arr[j + 1] = temp;
    console.log(i, '회전: ', arr);
  }
})();
